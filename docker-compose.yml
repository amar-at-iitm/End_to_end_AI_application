version: '3.8'

services:
  backend_app:
    build:
      context: ./app
    container_name: backend_app
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./models/:/app/models/
      - ./ml_pipeline/:/app/ml_pipeline/
      - ./data/:/app/data/
    restart: always

  streamlit_app:
    build:
      context: .
      dockerfile: dockerfile
    container_name: streamlit_app
    ports:
      - "8501:8501"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./data:/app/data
      - ./model:/app/model
    restart: always


  metrics_exporter:
    build: ./system-metric-exporter
    container_name: metrics_exporter
    restart: always
    ports:
      - "18000:18000"
    volumes:
      - /proc:/host_proc:ro
      - /dev:/host_dev:ro
    environment:
      - PROC_PATH=/host_proc
    privileged: true
    
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=secret
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: unless-stopped


volumes:
  grafana-storage: